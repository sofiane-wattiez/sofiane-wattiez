name: Generate GitHub Contributions Snake Animation

on:
  schedule:
    - cron: "0 */24 * * *"  # Exécuter tous les jours à minuit UTC
  workflow_dispatch:  # Permet un déclenchement manuel
  push:
    branches:
      - main  # Déclenchement lors de poussées vers la branche main

jobs:
  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Étape 1 : Checkout du dépôt
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          clean: true  # Nettoie le répertoire avant de faire le checkout

      # Étape 2 : Générer l'animation Snake
      - name: Generate GitHub Contributions Snake Animations
        uses: Platane/snk@v3.2.0
        with:
          github_user_name: ${{ github.REPOSITORY_OWNER }}  # Nom d'utilisateur GitHub pour générer l'animation
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark
            dist/ocean.gif?color_snake=orange&color_dots=#bfd6f6,#8dbdff,#64a1f4,#4b91f1,#3c7dd9
        env:
          GITHUB_TOKEN: ${{ secrets.METRICS_TOKEN }}  # Utilisation du token pour l'authentification

      # Étape 3 : Déployer dans la branche output
      - name: Deploy to Output Branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.METRICS_TOKEN }}  # Authentification pour déployer
          publish_dir: ./dist  # Répertoire contenant les fichiers générés
          publish_branch: output  # Branche où déployer
          commit_message: "Update snake animation [skip ci]"  # Message de commit

      # - name: push github-contribution-grid-snake.svg to the output branch
      #   uses: crazy-max/ghaction-github-pages@v3.1.0
      #   with:
      #     target_branch: output
      #     build_dir: dist
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.METRICS_TOKEN }}
